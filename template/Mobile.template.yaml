log:
  level: info
  timestamp: true
  output: /opt/singbox/singbox.log
dns:
  servers:
    [
      {
        tag: external,
        address: https://8.8.8.8/dns-query,
        address_strategy: ipv4_only,
        strategy: prefer_ipv4,
        detour: select,
      },
      {
        tag: proxy_dns,
        address: https://1.1.1.1/dns-query,
        address_strategy: ipv4_only,
        strategy: prefer_ipv4,
        detour: direct,
      },
      {
        tag: internal,
        address: https://223.5.5.5/dns-query,
        address_strategy: ipv4_only,
        strategy: prefer_ipv4,
        detour: direct,
      },
      { tag: dns_block, address: rcode://refused },
    ]
  rules:
    [
      { outbound: any, server: proxy_dns },
      { rule_set: geosite-cn, server: internal, rewrite_ttl: 43200 },
      {
        rule_set: geosite-cn,
        invert: true,
        server: external,
        rewrite_ttl: 43200,
      },
    ]
  strategy: prefer_ipv4
  final: external
  disable_cache: false
  disable_expire: false
  independent_cache: false
  reverse_mapping: false
inbounds:
  [
    {
      type: tun,
      tag: tun-in,
      inet4_address: 172.19.0.1/30,
      mtu: 1500,
      auto_route: true,
      strict_route: true,
      stack: mixed,
      sniff: true,
      sniff_override_destination: false,
    },
  ]

outbounds:
  ss:
    {
      type: shadowsocks,
      tag: "",
      server: "",
      server_port: 0,
      method: "",
      password: "",
    }
  vmess:
    {
      type: vmess,
      tag: "",
      server: "",
      server_port: 0,
      uuid: "",
      security: auto,
      transport:
        {
          type: ws,
          path: /,
          headers: {},
          early_data_header_name: Sec-WebSocket-Protocol,
        },
    }
  trojan:
    {
      type: trojan,
      tag: "",
      server: "",
      server_port: 0,
      password: "",
      tls:
        { enabled: true, disable_sni: false, server_name: "", insecure: true },
    }
  select:
    {
      type: selector,
      tag: select,
      outbounds: [],
      default: auto,
      interrupt_exist_connections: false,
    }
  auto:
    {
      type: urltest,
      tag: auto,
      outbounds: [],
      url: https://www.gstatic.com/generate_204,
      interval: 5m,
      tolerance: 100,
      interrupt_exist_connections: false,
    }

  custom_outbound: [
      [
        { type: dns, tag: dns-out },
        { type: direct, tag: direct },
        { type: block, tag: block },
      ],
      [],
      # {
      #   type: shadowsocks,
      #   tag: "自建香港",
      #   server: "sifu.top",
      #   server_port: 0,
      #   method: "cipher",
      #   password: "wsr19990902",
      # },
    ]

route:
  rule_set:
    [
      {
        tag: geoip-cn,
        type: remote,
        format: binary,
        url: https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs,
        download_detour: select,
        update_interval: 1d,
      },
      {
        tag: geosite-cn,
        type: remote,
        format: binary,
        url: https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-cn.srs,
        download_detour: select,
        update_interval: 1d,
      },
    ]
  rules:
    default:
      [
        { protocol: dns, outbound: dns-out },
        { ip_is_private: true, outbound: direct },
        { protocol: [quic], outbound: block },
      ]
    shunt:
      [
        {
          type: logical,
          mode: and,
          rules:
            [
              { rule_set: geosite-cn, invert: true },
              { rule_set: geoip-cn, invert: true },
            ],
          outbound: select,
        },
        {
          type: logical,
          mode: and,
          rules: [{ rule_set: geosite-cn }, { rule_set: geoip-cn }],
          outbound: direct,
        },
      ]
  final: select
  auto_detect_interface: true
experimental:
  clash_api: { external_controller: 0.0.0.0:9090, secret: "123456" }
  cache_file:
    enabled: true
    path: /opt/singbox/cache.db
